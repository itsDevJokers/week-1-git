1.  Intro Git

    GIT adalah salah satu version control system yang diciptakan oleh Linus Torvalds. GIT mencatat setiap perubahan file di code atau sourcode kita. Manfaat Git adalah:
    - Bisa menyimpan seluruh versi source code
    - Berkolaborasi membangun sistem jadi mudah
    - Bisa berkontribusi di proyek open source
    - Memudahkan dalam tracking perubahan
    - Memahami cara deploy modern
    - dan banyak lagi manfaat dari Git.

    Git saat ini sudah bisa disimpan pada penyimpanan cloud dengan menggunakan Github, Gitlab, dan BitBucket

2.  Fundamental Git

    Terdapat beberapa perintah-perintah dasar untuk melakukan operasi pada Git, yaitu:
    - Git init: Digunakan untuk menginisialisasi repository
    - Git config: Untuk melihat semua konfigurasi yang ada di git
    - Git add: Untuk memasukan file ke staging area
    - Git commit: Untuk mencatat perubahan yang dilakukan
    - Git status: Digunakan untuk mengetahui status file. Status file secara umum ada 3 yaitu untracked, staging area, modified
    - Git log: Untuk melihat riwayat commit
    - Git clone: Digunakan untuk mengcopy repo dari server
    - Git remote: Semacam api untuk berinteraksi dari client dengan server
    - Git push: Untuk mengirimkan commit ke server
    - Git pull: Untuk mengambil commit dari server jika ada perubahan di server yang dibuat oleh branch lain

3.  Git branch

    Branch adalah cabang yang ada pada Git dengan tujuan mengelola kode secara paralel atau berkolaborasi dengan developer lain.

    Terdapat beberapa perintah yang berkaitan dengan branch, yaitu:
    - Git branch: untuk melihat semua branch (local)
    - Git branch --all: melihat semua branch (termasuk pada remote)
    - Git branch (nama_branch): untuk membuat branch baru
    - Git checkout (nama_branch): untuk berpindah branch
    - Git branch -d (nama_branch): untuk menghapus branch
    - Git merge (nama_branch): untuk menggabungkan commit dari 2 atau lebih branch. Perintah ini bersifat relatif terhadap branch yang aktif. Untuk melakukan merge harus dipastikan file sudah dicommit. Ketika melakukan merge sering terjadi kondisi conflict dimana file yang sama terjadi perubahan pada beberapa branch dan tidak dapat dilakukan commit sebelum conflict diselesaikan dulu.

4.  GUI untuk Git

    Untuk mempermudah dalam mengoperasikan Git dan juga mempercepat pengelolaan source code, terdapat software yang berbasis GUI (Graphical User Interface) yang bernama SourceTree. Selain itu, kita dapat menyelesaikan conflict dengan lebih gampang. 

    Dalam menyelesaikan conflict menggunakan SourceTree, hal yang harus dilakukan adalah menginstall diff merge serta melakukan konfigurasi external diff tool pada SourceTree.